@model BenchBnb.FormModels.CreateBench
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Bench", FormMethod.Post, new { @class = "pure-form pure-form-aligned" }))
{
    @Html.AntiForgeryToken()

    <fieldset>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="pure-control-group">
            @Html.LabelFor(model => model.NumSeats, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.NumSeats, new { @class = "form-control", id = "numSeatsText" })
            @Html.ValidationMessageFor(model => model.NumSeats, "", new { @class = "text-danger" })
        </div>

        <div class="pure-control-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Description, new { @class = "form-control", id = "descriptionText" } )
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        <div class="pure-control-group">
            @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Latitude, new { @class = "form-control", id = "latText" })
            @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
        </div>

        <div class="pure-control-group">
            @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Longitude, new { @class = "form-control", id = "longText" })
            @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-default">Submit</button>
            </div>
       </div>
    </fieldset>
}